<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chuanqihou.schoolnews.dao.CommentDao">

    <resultMap id="commentMap" type="com.chuanqihou.schoolnews.entity.Comment">
        <id column="id" property="id"/>
        <result column="news_id" property="newsId"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="comment_content" property="commentContent"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="isDelete"/>
    </resultMap>

    <resultMap id="commentVoMap" type="com.chuanqihou.schoolnews.vo.CommentVo">
        <id column="id" property="id"/>
        <result column="news_id" property="newsId"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="comment_content" property="commentContent"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="isDelete"/>
        <result column="nick_name" property="createUserNickName"/>
        <result column="head_img" property="userHeadImg"/>
        <result column="news_title" property="newsTitle"/>
    </resultMap>

    <resultMap id="commentVo2Map" type="com.chuanqihou.schoolnews.vo.CommentVo">
        <id column="id" property="id"/>
        <result column="news_id" property="newsId"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="comment_content" property="commentContent"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="isDelete"/>
        <result column="nick_name" property="createUserNickName"/>
        <result column="news_title" property="newsTitle"/>
    </resultMap>

    <select id="queryCommentByNewsId" resultMap="commentVoMap">
        select com.*,u.*
        from t_comment com join t_user u on com.create_user_id=u.Id where news_id=#{newsId} and is_delete=0 order by com.create_time desc
    </select>
    
    <insert id="insertByNewsIdAndUserId">
        insert into t_comment (Id, news_id, comment_content, create_time, is_delete, create_user_id)
        values (#{id},#{newsId},#{commentContent},#{createTime},#{isDelete},#{createUserId});
    </insert>

    <select id="page" resultMap="commentVo2Map">
        select com.*,n.news_title,u.nick_name
        from t_comment com
            join t_news n on com.news_id=n.id
            join t_user u on com.create_user_id=u.id
            <where>
                <if test="status!=null">
                    com.is_delete = #{status}
                </if>

                <if test="commentDetail!=null and commentDetail!=''">
                    and com.comment_content like '%' #{commentDetail} '%'
                </if>

                <if test="commentUser!=null and commentUser!=''">
                    and u.nick_name like '%' #{commentUser} '%'
                </if>
            </where>
        order by com.create_time desc limit #{skipCount},#{pageSize};
    </select>

    <select id="pageTotal" resultType="int">
        select count(*)
        from t_comment com
        join t_news n on com.news_id=n.id
        join t_user u on com.create_user_id=u.id
        <where>
            <if test="status!=null and status!=''">
                com.is_delete = #{status}
            </if>
            <if test="commentDetail!=null and commentDetail!=''">
                and com.comment_content like '%' #{commentDetail} '%'
            </if>
            <if test="commentUser!=null and commentUser!=''">
                and u.nick_name like '%' #{commentUser} '%'
            </if>
        </where>
    </select>

    <delete id="delete">
        delete from t_comment where Id=#{id}
    </delete>

    <update id="updateStatus">
        update t_comment set is_delete=#{isDelete} where Id=#{id}
    </update>

    <select id="queryAllComments" resultMap="commentVo2Map">
        select com.*,n.news_title,u.nick_name
        from t_comment com
        join t_news n on com.news_id=n.id
        join t_user u on com.create_user_id=u.id
        order by com.create_time
    </select>

</mapper>